/*
 * MainFrame.java
 *
 * Created on __DATE__, __TIME__
 */

package org.cloudbus.cloudsim.ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Enumeration;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import org.cloudbus.cloudsim.policy.VmsToHosts.Main;
import org.cloudbus.cloudsim.policy.utils.ExtendedConstants;

/**
 * 
 * @author __USER__
 */
public class MainFrame extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/** Creates new form MainFrame */
	public MainFrame() {
		Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
		int width = 800;
		int height = 500;
		setBounds((d.width - width) / 2, (d.height - height) / 2, width, height);
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		sel_policy = new ButtonGroup();
		Init_Form = new JPanel();
		Vm_Num = new JLabel();
		Host_Num = new JLabel();
		Host_Number = new JTextField();
		Vm_Number = new JTextField();
		InitState = new JButton();
		err_show = new JLabel();
		RB_PSO = new JRadioButton();
		RB_Random = new JRadioButton();
		RB_Greedy = new JRadioButton();
		RB_Roundrobin = new JRadioButton();
		jScrollPane1 = new JScrollPane();
		jScrollPane2 = new JScrollPane();
		jScrollPane3 = new JScrollPane();
		jTable1 = new JTable();
		jTable2 = new JTable();
		jTable3 = new JTable();
		jLabel1 = new JLabel();
		jLabel2 = new JLabel();
		jTextField1 = new JTextField();
		jTextField2 = new JTextField();
		Start_Migrate = new JButton();

		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
		setTitle("基于负载均衡的云计算资源调度展示");
		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

		Init_Form.setBorder(BorderFactory.createLineBorder(new java.awt.Color(
				0, 0, 0)));

		Vm_Num.setText("虚拟机数目");

		Host_Num.setText("主机数目");

		InitState.setText("开始部署");
		jLabel1.setText("第几轮迁移");
		jLabel2.setText("该轮迁移次数");
		InitState.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				InitStateMouseClicked(evt);
			}
		});

		err_show.setForeground(new java.awt.Color(255, 0, 0));
		err_show.setText("请输入主机和虚拟机数目!");
		err_show.setVisible(false);

		RB_PSO.setText("粒子群算法");
		RB_PSO.setActionCommand("pso");

		RB_Random.setText("随机算法");
		RB_Random.setActionCommand("random");

		RB_Greedy.setText("贪心算法");
		RB_Greedy.setActionCommand("greedy");

		RB_Roundrobin.setText("轮询算法");
		RB_Roundrobin.setActionCommand("roundrobin");

		sel_policy.add(RB_PSO);
		sel_policy.add(RB_Greedy);
		sel_policy.add(RB_Random);
		sel_policy.add(RB_Roundrobin);
		GroupLayout Init_FormLayout = new GroupLayout(Init_Form);
		Init_Form.setLayout(Init_FormLayout);
		Init_FormLayout
				.setHorizontalGroup(Init_FormLayout
						.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(
								Init_FormLayout
										.createSequentialGroup()
										.addGroup(
												Init_FormLayout
														.createParallelGroup(
																GroupLayout.Alignment.LEADING)
														.addGroup(
																Init_FormLayout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addGroup(
																				Init_FormLayout
																						.createParallelGroup(
																								GroupLayout.Alignment.LEADING,
																								false)
																						.addGroup(
																								Init_FormLayout
																										.createSequentialGroup()
																										.addComponent(
																												Host_Num)
																										.addGap(18,
																												18,
																												18)
																										.addComponent(
																												Host_Number,
																												GroupLayout.PREFERRED_SIZE,
																												66,
																												GroupLayout.PREFERRED_SIZE))
																						.addGroup(
																								Init_FormLayout
																										.createSequentialGroup()
																										.addComponent(
																												Vm_Num)
																										.addPreferredGap(
																												LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												Vm_Number))))
														.addGroup(
																Init_FormLayout
																		.createSequentialGroup()
																		.addGap(31,
																				31,
																				31)
																		.addGroup(
																				Init_FormLayout
																						.createParallelGroup(
																								GroupLayout.Alignment.LEADING)
																						.addComponent(
																								RB_Random)
																						.addComponent(
																								RB_PSO)
																						.addComponent(
																								RB_Greedy)
																						.addComponent(
																								InitState)
																						.addComponent(
																								RB_Roundrobin)))
														.addGroup(
																GroupLayout.Alignment.TRAILING,
																Init_FormLayout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				err_show,
																				GroupLayout.DEFAULT_SIZE,
																				188,
																				Short.MAX_VALUE)))
										.addContainerGap()));
		Init_FormLayout
				.setVerticalGroup(Init_FormLayout
						.createParallelGroup(GroupLayout.Alignment.LEADING)
						.addGroup(
								Init_FormLayout
										.createSequentialGroup()
										.addGap(37, 37, 37)
										.addGroup(
												Init_FormLayout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(Host_Num)
														.addComponent(
																Host_Number,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												Init_FormLayout
														.createParallelGroup(
																GroupLayout.Alignment.BASELINE)
														.addComponent(Vm_Num)
														.addComponent(
																Vm_Number,
																GroupLayout.PREFERRED_SIZE,
																GroupLayout.DEFAULT_SIZE,
																GroupLayout.PREFERRED_SIZE))
										.addGap(36, 36, 36)
										.addGap(26, 26, 26)
										.addComponent(RB_PSO)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(RB_Random)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(RB_Greedy)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(RB_Roundrobin)
										.addGap(48, 48, 48)
										.addComponent(InitState)
										.addPreferredGap(
												LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(err_show,
												GroupLayout.PREFERRED_SIZE, 23,
												GroupLayout.PREFERRED_SIZE)
										.addContainerGap(81, Short.MAX_VALUE)));

		jTable1.setModel(new DefaultTableModel(new Object[][] { { null, null,
				null, null, null, null } }, new String[] { "主机编号", "虚拟机编号",
				"CPU(%)", "内存(%)", "带宽(%)", "利用率(%)" }));
		jScrollPane1.setViewportView(jTable1);
		jTable2.setModel(new DefaultTableModel(new Object[][] { { null, null,
				null, null, null } }, new String[] { "虚拟机编号", "主机编号",
				"CPU(%)", "内存(%)", "带宽(%)" }));
		jScrollPane2.setViewportView(jTable2);

		jTable3.setModel(new DefaultTableModel(
				new Object[][] { { null, null } }, new String[] { "待迁移虚拟机编号",
						"目的主机编号" }));
		jScrollPane3.setViewportView(jTable3);

		GlobalObject.setjScrollPane1(jScrollPane1);
		GlobalObject.setjTable1(jTable1);
		GlobalObject.setjScrollPane2(jScrollPane2);
		GlobalObject.setjTable2(jTable2);
		GlobalObject.setjScrollPane3(jScrollPane3);
		GlobalObject.setjTable3(jTable3);
		Start_Migrate.setText("动态模拟");

		Start_Migrate.addMouseListener(new MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				Main.test();
			}
		});
		GroupLayout layout = new GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(Init_Form,
										GroupLayout.PREFERRED_SIZE,
										GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		Start_Migrate)
																.addGap(43, 43,
																		43)
																.addComponent(
																		jLabel1)
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jTextField1,
																		GroupLayout.PREFERRED_SIZE,
																		66,
																		GroupLayout.PREFERRED_SIZE)
																.addGap(27, 27,
																		27)
																.addComponent(
																		jLabel2)
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jTextField2,
																		GroupLayout.PREFERRED_SIZE,
																		66,
																		GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addPreferredGap(
																		LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jScrollPane2,
																						GroupLayout.DEFAULT_SIZE,
																						500,
																						Short.MAX_VALUE)
																				.addComponent(
																						jScrollPane1,
																						GroupLayout.DEFAULT_SIZE,
																						500,
																						Short.MAX_VALUE))))
								.addPreferredGap(
										LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jScrollPane3,
										GroupLayout.PREFERRED_SIZE, 200,
										GroupLayout.PREFERRED_SIZE)
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(Start_Migrate)
												.addComponent(
														jTextField1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel1)
												.addComponent(
														jTextField2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel2))
								.addPreferredGap(
										LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane1,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										179,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addComponent(jScrollPane2,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										263, Short.MAX_VALUE))
				.addComponent(Init_Form, GroupLayout.DEFAULT_SIZE,
						GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jScrollPane3,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										495, Short.MAX_VALUE)));

		getAccessibleContext().setAccessibleParent(this);

		pack();
	}// </editor-fold>
		// GEN-END:initComponents

	private void InitStateMouseClicked(MouseEvent evt) {
		int hostnum = 0;
		int vmnum = 0;
		String policy = null;
		try {
			hostnum = Integer.parseInt(Host_Number.getText());
			vmnum = Integer.parseInt(Vm_Number.getText());
			Enumeration<AbstractButton> radioBtns = sel_policy.getElements();
			while (radioBtns.hasMoreElements()) {
				AbstractButton btn = radioBtns.nextElement();
				if (btn.isSelected()) {
					policy = btn.getActionCommand();
					break;
				}
			}
		} catch (Exception e) {
			err_show.setVisible(true);
		}
		if (hostnum != 0 && vmnum != 0) {
			err_show.setVisible(false);
			ExtendedConstants.setHostNum(hostnum);// 物理机数
			ExtendedConstants.setVmNum(vmnum);// 虚拟机数
			Main.init(policy);// 算法执行
			jTable1.setModel(new DefaultTableModel(Main.getVmsInHost(),
					new String[] { "主机编号", "虚拟机编号", "CPU(%)", "内存(%)", "带宽(%)",
							"利用率(%)" }));
			jTable2.setModel(new DefaultTableModel(Main.getVmToHost(),
					new String[] { "虚拟机编号", "主机编号", "CPU(%)", "内存(%)", "带宽(%)" }));
		}
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					// UIManager.setLookAndFeel(UIManager
					// .getSystemLookAndFeelClassName());
					JFrame.setDefaultLookAndFeelDecorated(true);
					UIManager
							.setLookAndFeel("ch.randelshofer.quaqua.QuaquaLookAndFeel");
				} catch (Exception e) {
					e.printStackTrace();
				}
				new MainFrame().setVisible(true);
			}
		});

	}

	// GEN-BEGIN:variables
	// Variables declaration - do not modify
	private JLabel Host_Num;
	private JTextField Host_Number;
	private JButton InitState;
	private JPanel Init_Form;
	private JRadioButton RB_Greedy;
	private JRadioButton RB_PSO;
	private JRadioButton RB_Random;
	private JRadioButton RB_Roundrobin;
	private JButton Start_Migrate;
	private JLabel Vm_Num;
	private JTextField Vm_Number;
	private JLabel err_show;
	private JScrollPane jScrollPane1;
	private JScrollPane jScrollPane2;
	private JScrollPane jScrollPane3;
	private JTable jTable1;
	private JTable jTable2;
	private JTable jTable3;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private ButtonGroup sel_policy;
	private JTextField jTextField1;
	private JTextField jTextField2;
	// End of variables declaration//GEN-END:variables

}